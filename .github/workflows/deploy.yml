# .github/workflows/deploy.yml

name: Deploy Spring Boot to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build

      # 4. 배포용 .zip 파일 생성
      #    Elastic Beanstalk는 .jar 파일 하나보다 .zip 파일을 더 안정적으로 처리합니다.
      - name: Create deployment package
        run: |
          cd build/libs
          zip -r ../../deploy.zip *-SNAPSHOT.jar

      # 5. 검증된 액션을 사용한 배포
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          # AWS 인증 정보
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ap-northeast-2 # 본인의 AWS 리전

          # Elastic Beanstalk 정보
          application_name: Meow-dj      # AWS에 있는 애플리케이션 이름
          environment_name: Meow-dj-env  # 배포할 환경 이름
          
          # 배포할 패키지 정보
          version_label: "v-${{ github.sha }}" # 고유한 버전 이름
          deployment_package: deploy.zip     # 4번 스텝에서 생성한 zip 파일
          use_existing_version_if_available: true 
